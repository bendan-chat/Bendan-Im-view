/* eslint-disable @typescript-eslint/no-unused-vars */
import React, { useState } from "react";
import { SmileTwoTone } from "@ant-design/icons";
import { Tooltip } from "antd";

import "./EmjoyIcon.less";

const emjoys =
	"üòÄ üòÅ üòÇ ü§£ üòÉ üòÑ üòÖ üòÜ üòâ üòä üòã üòé üòç üòò üòó üòô üòö üôÇ ü§ó ü§© ü§î ü§® üòê üòë üò∂ üôÑ üòè üò£ üò• üòÆ ü§ê üòØ üò™ üò´ üò¥ üòå üòõ üòú üòù ü§§ üòí üòì üòî üòï üôÉ ü§ë üò≤ ‚òπÔ∏è üôÅ üòñ üòû üòü üò§ üò¢ üò≠ üò¶ üòß üò® üò© ü§Ø üò¨ üò∞ üò± üò≥ ü§™ üòµ üò° üò† ü§¨ üò∑ ü§í ü§ï ü§¢ ü§Æ ü§ß üòá ü§† ü§° ü§• ü§´ ü§≠ üßê ü§ì üòà üëø üëπ üë∫ üíÄ üëª üëΩ ü§ñ üí© üò∫ üò∏ üòπ üòª üòº üòΩ üôÄ üòø üòæ ü§≤ üëê üôå üëè ü§ù üëç üëé üëä ‚úä ü§õ ü§ú ü§û ‚úåÔ∏è ü§ü ü§ò üëå üëà üëâ üëÜ üëá ‚òùÔ∏è ‚úã ü§ö üñê üññ üëã ü§ô üí™ üñï ‚úçÔ∏è üôè";
const emjoyList = emjoys.split(" ");
interface IProps {
	msg: string;
	setMsg: (msg: any) => void;
}

export default function EmjoyIcon({ setMsg, msg }: IProps) {
	const [open, setOpen] = useState<boolean>();
	/**
	 * Â§ÑÁêÜË°®ÊÉÖ
	 * @returns
	 */
	function buildEmjoysSpan() {
		const emjoysSpans: JSX.Element[] = [];
		for (let i = 0; i < emjoyList.length; i++) {
			emjoysSpans.push(
				<span
					className="emjoy-span"
					key={i}
					onClick={() => {
						console.log(i);
						setMsg(msg + emjoyList[i]);
						setOpen(false);
					}}
				>
					{" " + emjoyList[i] + " "}
				</span>
			);
		}
		return emjoysSpans;
	}
	return (
		<>
			<Tooltip
				placement="topLeft"
				trigger="click"
				color="#dedede"
				open={open}
				title={
					<>
						<div className="emjoy-list-div-parent">{buildEmjoysSpan()}</div>
					</>
				}
			>
				<SmileTwoTone onClick={() => setOpen(true)} className="emjoy-left-icon" />
			</Tooltip>
		</>
	);
}
